# This is a basic workflow to help you get started with Actions

name: Log Changes

# Controls when the workflow will run
on:
  # Triggers the workflow on closed issues
  issues:
    types:
      - closed

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  log:
    name: Log Issue
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: echo body
        env:
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
        run: |
          echo "---" >> README.md
          echo "## ${ISSUE_TITLE} [$(date +"%D %T")]" >> README.md
          echo "" >> README.md
          echo "${ISSUE_BODY}" >> README.md
          echo "" >> README.md

      # Commit changes
      - name: commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          if git diff README.md | grep . > /dev/null ; then
            git pull
            git add README.md
            git commit -m "log closed issue"
            git push
          fi
  dump:
    name: Dump Records
    needs: log
    runs-on: ubuntu-latest
    env:
      DB: ${{ secrets.DB_NAME }}
      LOGIN: ${{ secrets.DB_LOGIN }}
      PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Git pull
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull

      - name: Export records
        run: heurist dump -d ${DB} -l ${LOGIN} -p ${PASSWORD} -o ./data -f ./data/lostma.duckdb

      - name: Show files
        run: ls -l ./data

      - name: Commit dump
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          if git diff ./data/* | grep . > /dev/null ; then
            git add ./data/*
            git commit -m "dump records"
            git push
          fi
